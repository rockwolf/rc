#pass in on re0 from 192.168.2.1/8
#pass in on re0 from !10.1.2.3 
## Macros
tcp_services = "{ ssh, smtp, domain, www, pop3, auth, pop3s }"
udp_services = "{ domain }"
SYN_ONLY="S/FSRA"
EXT_NIC="re0"
INT_NIC="re0"
# Your Internet IP goes in the EXT_IP variable
EXT_IP="192.168.2.101"
# Your private network IP goes in the INT_IP variable
# if you have two NICs on the machine
INT_IP="127.0.0.1"

## FILTER RULES
# Block everything (inbound AND outbound on ALL interfaces) by default (catch-all)
block all
# Default TCP policy
block return-rst in log on $EXT_NIC proto TCP all
   pass in log quick on $EXT_NIC proto TCP from any to $EXT_IP port 22 flags $SYN_ONLY keep state
   pass in log quick on $EXT_NIC proto TCP from any to $EXT_IP port 113 flags $SYN_ONLY keep state
   pass in quick on $EXT_NIC proto TCP from any to $EXT_IP port http
   pass in quick on $EXT_NIC proto TCP from any to $EXT_IP port https
   pass in quick on $EXT_NIC proto TCP from any to $EXT_IP port ssh

# Default UDP policy
block in log on $EXT_NIC proto udp all
   # It's rare to be hosting a service that requires UDP (unless you are hosting
   # a dns server for example), so there typically won't be any entries here.

# Default ICMP policy
block in log on $EXT_NIC proto icmp all
   pass in log quick on $EXT_NIC proto icmp from any to $EXT_IP keep state #echoreq keep state

block out log on $EXT_NIC all
   pass out log quick on $EXT_NIC from $EXT_IP to any keep state

# Allow the local interface to talk unrestricted
pass in quick on lo0 all
pass out quick on lo0 all
pass in log all keep state
pass out log all keep state

#block all
#pass out proto tcp to any port $tcp_services keep state
#pass proto udp to any port $udp_services keep state
