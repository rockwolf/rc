#############################################################################
# A minimal rTorrent configuration that provides the basic features
# you want to have in addition to the built-in defaults.
#
# See https://github.com/rakshasa/rtorrent/wiki/CONFIG-Template
# for an up-to-date version.
#############################################################################

# helper method: checks existence of a directory, file, symlink
method.insert = check_object.value, simple|private, "execute.capture=bash,-c,\"$cat=\\\"test -\\\",$argument.2=,\\\" \\\\\\\"\\\",$argument.0=,$argument.1=,\\\"\\\\\\\" && echo -n 1 || echo -n\\\"\""

## Instance layout (base paths)
method.insert = cfg.dir.basedir,  private|const|string, (cat,"/home/rockwolf/dl/rtorrent/")
method.insert = cfg.dir.incomplete, private|const|string, (cat,(cfg.dir.basedir),"incomplete/")
method.insert = cfg.dir.meta_downloading, private|const|string, (cat,(cfg.dir.basedir),".meta_downloading/")
method.insert = cfg.dir.logs,     private|const|string, (cat,(cfg.dir.basedir),"log/")
method.insert = cfg.logfile,  private|const|string, (cat,(cfg.dir.logs),"rtorrent-",(system.time),".log")
method.insert = cfg.dir.session,  private|const|string, (cat,(cfg.dir.basedir),".session/")
method.insert = cfg.dir.watch,    private|const|string, (cat,(cfg.dir.basedir),"watch/")


## Create instance directories
execute.throw = sh, -c, (cat,\
    "mkdir -p \"",(cfg.dir.incomplete),"\" ",\
    "\"",(cfg.dir.logs),"\" ",\
    "\"",(cfg.dir.meta_downloading),"\" ",\
    "\"",(cfg.dir.session),"\" ")


## Listening port for incoming peer traffic (fixed; you can also randomize it)
network.port_range.set = 50000-50000
network.port_random.set = no


## Tracker-less torrent and UDP tracker support
## (conservative settings for 'private' trackers, change for 'public')
dht.mode.set = disable
protocol.pex.set = no

trackers.use_udp.set = no


## Peer settings
throttle.max_uploads.set = 100
throttle.max_uploads.global.set = 250

throttle.min_peers.normal.set = 20
throttle.max_peers.normal.set = 60
throttle.min_peers.seed.set = 30
throttle.max_peers.seed.set = 80
trackers.numwant.set = 80

protocol.encryption.set = allow_incoming,try_outgoing,enable_retry


## Limits for file handle resources, this is optimized for
## an `ulimit` of 1024 (a common default). You MUST leave
## a ceiling of handles reserved for rTorrent's internal needs!
network.http.max_open.set = 50
network.max_open_files.set = 600
network.max_open_sockets.set = 300


## Memory resource usage (increase if you have a large number of items loaded,
## and/or the available resources to spend)
pieces.memory.max.set = 1800M
network.xmlrpc.size_limit.set = 4M


## Basic operational settings (no need to change these)
session.path.set = (cat, (cfg.dir.session))
directory.default.set = (cat, (cfg.dir.incomplete))
log.execute = (cat, (cfg.dir.logs), "execute.log")
#log.xmlrpc = (cat, (cfg.dir.logs), "xmlrpc.log")
execute.nothrow = sh, -c, (cat, "echo >",\
    (session.path), "rtorrent.pid", " ",(system.pid))


## Other operational settings (check & adapt)
encoding.add = utf8
system.umask.set = 0027
system.cwd.set = (directory.default)
network.http.dns_cache_timeout.set = 25
schedule2 = monitor_diskspace, 15, 60, ((close_low_diskspace, 1000M))
#pieces.hash.on_completion.set = no
#view.sort_current = seeding, greater=d.ratio=
#keys.layout.set = qwerty
#network.http.capath.set = "/etc/ssl/certs"
#network.http.ssl_verify_peer.set = 0
#network.http.ssl_verify_host.set = 0


## Some additional values and commands
method.insert = system.startup_time, value|const, (system.time)
method.insert = d.data_path, simple,\
    "if=(d.is_multi_file),\
        (cat, (d.directory), /),\
        (cat, (d.directory), /, (d.name))"
method.insert = d.session_file, simple, "cat=(session.path), (d.hash), .torrent"


## Watch directories (add more as you like, but use unique schedule names)
## Add torrent
schedule2 = watch_load, 11, 10, ((load.verbose, (cat, (cfg.dir.watch), "*.torrent")))


## Run the rTorrent process as a daemon in the background
## (and control via XMLRPC sockets)
#system.daemon.set = true
#network.scgi.open_local = (cat,(session.path),rpc.socket)
#execute.nothrow = chmod,770,(cat,(session.path),rpc.socket)

### begin: Handle magnet links specail way ###
# Start any magnet torrent from the watch directory
method.set_key = event.download.inserted_new, auto_start_meta_in_load_dir, "branch=\"and={d.is_meta=,not=$d.state=}\",d.start="
# helper method: compose the full path of the wrong meta file in "incomplete" dir
method.insert = d.get_wrong_magnet_meta_file_path,   simple|private, "cat=$cfg.dir.incomplete=,$d.hash=,.meta"
# helper method: compose the full path of the right torrent file in ".session" dir
method.insert = d.get_session_magnet_meta_file_path, simple|private, "cat=$cfg.dir.session=,$d.hash=,.torrent"
# helper method: compose the new full path of the right torrent file in watch dir
method.insert = d.get_new_magnet_meta_file_path,     simple|private, "cat=$cfg.dir.meta_downl=,$d.name=,-,$d.hash=,.torrent"
# helper method: delete wrong meta file from "incomplete dir"
method.insert = d.delete_wrong_magnet_meta_file,     simple|private, "execute.nothrow={rm,-rf,--,$d.get_wrong_magnet_meta_file_path=}"
# helper method: copy the right torrent file from ".session" dir into watch dir
method.insert = d.copy_session_magnet_meta_file,     simple|private, "execute.nothrow={cp,--,$d.get_session_magnet_meta_file_path=,$d.get_new_magnet_meta_file_path=}"
# helper method: copies right one into its proper place, sets d.tied_to_file property to it, deletes the wrong one, saves session
method.insert = d.fix_magnet_tied_file, simple|private, "d.copy_session_magnet_meta_file=; d.tied_to_file.set=$d.get_new_magnet_meta_file_path=; d.delete_wrong_magnet_meta_file=; d.save_full_session="

# Fix tied torrent file of an initially magnet link when its download has been just started: delete the wrong one from "incomplete" dir and copy the right one from ".session" dir if they exist
method.set_key = event.download.inserted_new, fix_magnet_tied_file, "branch=\"and={\\\"check_object.value=$cat=$d.get_session_magnet_meta_file_path=,,f\\\",\\\"check_object.value=$cat=$d.get_wrong_magnet_meta_file_path=,,f\\\"}\",d.fix_magnet_tied_file="
### end: Handle magnet links specail way ###

## Logging:
##   Levels = critical error warn notice info debug
##   Groups = connection_* dht_* peer_* rpc_* storage_* thread_* tracker_* torrent_*
print = (cat, "Logging to ", (cfg.logfile))
log.open_file = "log", (cfg.logfile)
log.add_output = "info", "log"
#log.add_output = "tracker_debug", "log"

### END of rtorrent.rc ###
